@use '$shared/ui/colors' as colors;
@use '$shared/ui/breakpoints' as breakpoints;

// Glassmorphism badge
.badge {
	box-sizing: border-box;
	position: relative;
	display: inline-flex;
	align-items: center;
	justify-content: center;

	padding: 24px;
	height: 96px;
	border-radius: 24px;

	background: color-mix(in srgb, colors.color('Badge_Grey') 20%, transparent);

	--_border-width: 1px;
	--_border-alpha: 35%;
	// вручную подобранное значение, максимально схожее с макетами
	--_blur: 8px;

	backdrop-filter: blur(var(--_blur));
	-webkit-backdrop-filter: blur(var(--_blur));

	// border via gradient mask
	&::before {
		content: '';
		position: absolute;
		inset: 0;
		border-radius: inherit;
		padding: var(--_border-width);
		background: linear-gradient(
			180deg,
			color-mix(in srgb, colors.color('Main_White') var(--_border-alpha), transparent) 0%,
			color-mix(in srgb, colors.color('Main_White') var(--_border-alpha), transparent) 100%
		);
		-webkit-mask:
			linear-gradient(colors.color('Main_Black') 0 0) content-box,
			linear-gradient(colors.color('Main_Black') 0 0);
		mask:
			linear-gradient(colors.color('Main_Black') 0 0) content-box,
			linear-gradient(colors.color('Main_Black') 0 0);
		-webkit-mask-composite: xor;
		mask-composite: exclude;
		pointer-events: none;
	}

	@include breakpoints.respond-until(breakpoints.$phone) {
		padding: 16px;
		height: 64px;
		border-radius: 16px;

		background: color-mix(in srgb, colors.color('Badge_Grey') 22%, transparent);

		--_border-width: 1.07px;
	}
}
